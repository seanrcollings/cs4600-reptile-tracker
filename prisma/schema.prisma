// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  creatdAt     DateTime @default(now())
  updatedAt    DateTime @updatedAt
  firstName    String
  lastName     String
  email        String   @unique
  passwordHash String

  reptiles  Reptile[]
  schedules Schedule[]
}

model Reptile {
  id        Int      @id @default(autoincrement())
  creatdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  species   String
  name      String
  sex       String

  user             User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  feedings         Feeding[]
  husbandryRecords HusbandryRecord[]
  schedules        Schedule[]
}

model Feeding {
  id        Int      @id @default(autoincrement())
  creatdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  foodItem  String
  reptileId Int

  reptile Reptile @relation(fields: [reptileId], references: [id], onDelete: Cascade)
}

model HusbandryRecord {
  id          Int      @id @default(autoincrement())
  creatdAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  length      Float
  weight      Float
  temperature Float
  humidity    Float
  reptileId   Int

  reptile Reptile @relation(fields: [reptileId], references: [id], onDelete: Cascade)
}

model Schedule {
  id          Int      @id @default(autoincrement())
  creatdAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  reptileId   Int
  type        String
  description String
  monday      Boolean  @default(false)
  tuesday     Boolean  @default(false)
  wednesday   Boolean  @default(false)
  thursday    Boolean  @default(false)
  friday      Boolean  @default(false)
  saturday    Boolean  @default(false)
  sunday      Boolean  @default(false)

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  reptile Reptile @relation(fields: [reptileId], references: [id], onDelete: Cascade)
}
